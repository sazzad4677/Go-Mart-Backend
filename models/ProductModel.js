const mongoose = require("mongoose");
const { v4: uuidv4 } = require("uuid");
const randomId = uuidv4().split("-").join("").slice(25, -1);
const productSchema = new mongoose.Schema({
  productId: {
    type: String,
    unique: true,
    required: true,
    default: "GM-" + Date.now() + randomId,
  },
  name: {
    type: String,
    required: [true, "Please enter product name"],
    trim: true,
    maxLength: [100, "Product cannot be more than 100 characters"],
  },
  price: {
    type: Number,
    required: [true, "Please enter product price"],
    default: 0.0,
  },
  description: {
    type: String,
    required: [true, "Please enter product description"],
  },
  ratings: {
    type: Number,
    default: 0,
  },
  images: [
    {
      public_id: {
        type: String,
        required: true,
      },
      url: {
        type: String,
        required: true,
      },
    },
  ],
  category: {
    type: String,
    required: [true, "Please select product category"],
    enum: {
      values: [
        "Fresh Vegetables",
        "Meat",
        "Frozen Fish",
        "Dried Fish",
        "Tofu & Meat Alternatives",
        "Rice",
        "Premium Ingredients",
        "Colors & Flavours",
        "Pickles",
        "Spices",
        "Oil",
        "Ghee",
        "Ready Mix",
        "Salt & Sugar",
        "Dal or Lentil",
        "Special Ingredients",
        "Shemai & Suji",
        "Nuts & Dried Fruits",
        "Baking Tools",
        "Baking & Dessert Mixes",
        "Baking Ingredients",
        "Flour",
        "Liquid & UHT Milk",
        "Butter & Sour Cream",
        "Cheese",
        "Eggs",
        "Powder Milk & Cream",
        "Yogurt & Sweet",
        "Yogurt & Sweet",
        "Ice Cream",
        "Frozen Snacks",
        "Canned Food",
        "Cookies",
        "Bakery Snacks",
        "Breads",
        "Dips & Spreads",
        "Honey",
        "Cakes",
        "Local Breakfast",
        "Energy Boosters",
        "Cereals",
        "Jam & Spreads",
        "Noodles",
        "Soups",
        "Pasta & Macaroni",
        "Candy & Chocolate",
        "Local Snacks",
        "Chips & Pretzels",
        "Popcorn & Nuts",
        "Salad Dressing",
        "Sauces",
        "Tea",
        "Coffee",
        "Juice",
        "Soft Drinks",
        "Water",
        "Syrups & Powder Drinks",
        "Diabetic Food",
        "Hygiene",
        "Health Care",
        "Personal Care",
        "Newborn Essentials",
        "Diapers & Wipes",
        "Feeders",
        "Fooding",
        "Bath & Skincare",
        "Baby Accessories",
        "Baby Oral Care",
        "Kitten Food",
        "Cat Food",
        "Dog Food",
        "Other Pet Foods",
        "Pet Accessories",
        "Air Fresheners",
        "Dishwashing Supplies",
        "Toilet & Surface Cleaners",
        "Laundry",
        "Napkins & Paper Products",
        "Pest Control",
        "Shoe Care",
        "Tableware & Trash Bags",
        "Cleaning Accessories",
        "Gardening",
        "Kitchen Accessories",
        "Lights & Electrical",
        "Tools & Hardware",
        "Kitchen Appliances",
        "Batteries",
        "Writing & Drawing",
        "Organizers",
        "Printing",
        "Cars & Toy Vehicles",
        "Dolls & Action Figures",
        "Plush & Stuffed Animals",
        "Cars & Toy Vehicles",
        "Learning Toys",
        "Cricket",
        "Badminton",
        "Football",
        "Other Sports",
        "Vehicle Essentials",
      ],
      message: "Please select correct category of this product",
    },
  },
  seller: {
    type: String,
    required: [true, "Please select product seller"],
  },
  stock: {
    type: Number,
    required: [true, "Please enter product stock"],
    default: 0,
  },
  numOfReviews: {
    type: Number,
    default: 0,
  },
  reviews: [
    {
      user: {
        type: mongoose.Schema.ObjectId,
        ref: "User",
        required: true,
      },
      name: {
        type: String,
        required: true,
      },
      rating: {
        type: Number,
        required: true,
      },
      comment: {
        type: String,
        required: true,
      },
    },
  ],
  user: {
    type: mongoose.Schema.ObjectId,
    ref: "User",
    required: true,
  },
  createdBy: {
    type: String,
    ref: "User",
    required: true,
  },
  role: {
    type: String,
    ref: "User",
    required: true,
  },
  createdAt: {
    type: String,
    default: `${new Date().toDateString()} Time ${
      new Date().getHours() % 12 || 12
    }:${new Date().getMinutes()} ${new Date().getHours() >= 12 ? "pm" : "am"}`,
  },
});

module.exports = mongoose.model("Product", productSchema);
